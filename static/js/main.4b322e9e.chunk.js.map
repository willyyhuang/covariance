{"version":3,"sources":["images/react-logo.svg","views/Overview/Overview.tsx","views/ProjectDetail/ProjectDetail.tsx","App.tsx","index.tsx"],"names":["OverView","projects","projectList","Card","style","margin","Grid","container","item","xs","md","lg","Avatar","src","ReactLogo","CardActions","Add","Settings","ExitToApp","CardContent","map","value","Accordion","AccordionSummary","Typography","name","AccordionDetails","detail","Button","variant","href","id","displayName","StyledCardActionArea","styled","CardActionArea","StyledRightIcon","ChevronRight","StyledListIcon","ListIcon","StyledButton","ProjectDetail","projectFilesTitle","getTypeIcon","type","icon","PictureAsPdf","Folder","padding","Delete","projectDetail","description","TextField","width","select","label","MenuItem","startIcon","Label","Publish","CardHeader","title","List","files","ListItem","ListItemAvatar","ListItemText","primary","secondary","ListItemSecondaryAction","IconButton","edge","Restore","Edit","App","path","to","component","exact","Overview","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b322e9e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/react-logo.6ce24c58.svg\";","import React from 'react'\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Avatar,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Grid,\n  Typography,\n} from '@material-ui/core'\nimport {Add, ExitToApp, Settings} from '@material-ui/icons'\nimport ReactLogo from '../../images/react-logo.svg'\nimport projectList from '../../mock/projectList.json'\n\nconst OverView = () => {\n  const {projects} = projectList\n\n  return (\n    <Card style={{margin: '20vh 20vw 20vh 20vw'}}>\n      <Grid container style={{margin: '16px 0px 16px 0px'}}>\n        <Grid item xs={1} md={1} lg={1} />\n        <Grid item xs={2} md={2} lg={2}>\n          <Avatar src={ReactLogo} />\n        </Grid>\n        <Grid item xs={8} md={8} lg={8}>\n          <Card>\n            <CardActions>\n              <Add />\n              <Settings />\n              <ExitToApp />\n            </CardActions>\n            <CardContent>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n              Suspendisse malesuada lacus ex, sit amet blandit leo lobortis\n              eget.\n            </CardContent>\n          </Card>\n          {projects.map((value) => (\n            <Accordion style={{margin: '16px 0px 16px 0px'}}>\n              <AccordionSummary>\n                <Typography>{value.name}</Typography>\n              </AccordionSummary>\n              <AccordionDetails>\n                <Typography>{value.detail}</Typography>\n                <Button variant='outlined' href={`/${value.id}`}>\n                  Open\n                </Button>\n              </AccordionDetails>\n            </Accordion>\n          ))}\n        </Grid>\n        <Grid item xs={1} md={1} lg={1} />\n      </Grid>\n    </Card>\n  )\n}\n\nOverView.displayName = 'OverView'\nexport default OverView\n","import React from 'react'\nimport {\n  Avatar,\n  Button,\n  Card,\n  CardContent,\n  CardActions,\n  CardActionArea,\n  CardHeader,\n  Grid,\n  MenuItem,\n  TextField,\n  Typography,\n  List,\n  ListItemAvatar,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n} from '@material-ui/core'\nimport {\n  Add,\n  Delete,\n  Settings,\n  ChevronRight,\n  Edit,\n  Folder,\n  Label,\n  List as ListIcon,\n  PictureAsPdf,\n  Publish,\n  Restore,\n} from '@material-ui/icons'\nimport styled from 'styled-components'\nimport projectDetail from '../../mock/projectDetail.json'\n\nconst StyledCardActionArea = styled(CardActionArea)`\n  color: #3366bb;\n  text-align: right;\n  padding: 8px;\n`\n\nconst StyledRightIcon = styled(ChevronRight)`\n  vertical-align: -8px;\n`\n\nconst StyledListIcon = styled(ListIcon)`\n  vertical-align: -6px;\n`\n\nconst StyledButton = styled(Button)`\n  height: 55px;\n`\n\nconst ProjectDetail = () => {\n  const projectFilesTitle = (\n    <Typography>\n      <StyledListIcon />\n      Project files\n    </Typography>\n  )\n\n  const getTypeIcon = (type: string) => {\n    let icon\n    switch (type) {\n      case 'PDF':\n        icon = <PictureAsPdf />\n        break\n      default:\n        icon = <Folder />\n    }\n    return icon\n  }\n\n  return (\n    <Card style={{margin: '20vh 20vw 20vh 20vw'}}>\n      <Card style={{padding: 16}}>\n        <CardActions>\n          <Add />\n          <Delete />\n          <Settings />\n        </CardActions>\n        <CardContent>{projectDetail.description}</CardContent>\n        <StyledCardActionArea>\n          Documentation\n          <StyledRightIcon />\n        </StyledCardActionArea>\n      </Card>\n      <Grid container style={{margin: '16px 0px 16px 0px'}}>\n        <Grid item xs={1} md={1} lg={1} />\n        <Grid item xs={3} md={3} lg={3}>\n          <TextField\n            style={{width: '80%'}}\n            id='tag-version'\n            select\n            label='Select'\n            variant='outlined'>\n            <MenuItem value='1.0.0'>1.0.0</MenuItem>\n          </TextField>\n        </Grid>\n        <Grid item xs={2} md={2} lg={2} />\n        <Grid item xs={3} md={3} lg={3}>\n          <StyledButton variant='outlined' startIcon={<Label />}>\n            Tag New Version\n          </StyledButton>\n        </Grid>\n        <Grid item xs={2} md={2} lg={2}>\n          <StyledButton variant='outlined' startIcon={<Publish />}>\n            Upload\n          </StyledButton>\n        </Grid>\n        <Grid item xs={1} md={1} lg={1} />\n      </Grid>\n      <Card>\n        <CardHeader title={projectFilesTitle} />\n        <CardContent>\n          <List>\n            {projectDetail.files.map((item) => (\n              <ListItem>\n                <ListItemAvatar>\n                  <Avatar>{getTypeIcon(item.type)}</Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={item.name}\n                  secondary={item.description}\n                />\n                <ListItemSecondaryAction>\n                  <IconButton edge='end'>\n                    <Restore />\n                  </IconButton>\n                  <IconButton edge='end'>\n                    <Edit />\n                  </IconButton>\n                  <IconButton edge='end'>\n                    <Delete />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            ))}\n          </List>\n        </CardContent>\n      </Card>\n    </Card>\n  )\n}\n\nProjectDetail.displayName = 'ProjectDetail'\nexport default ProjectDetail\n","import {BrowserRouter, Route, Redirect} from 'react-router-dom'\nimport React from 'react'\nimport {Overview, ProjectDetail} from './views'\n\nconst App = () => (\n  <BrowserRouter>\n    <Route path='/soen-357'>\n      <Redirect to='/' />\n    </Route>\n    <Route path='/:id' component={ProjectDetail} />\n    <Route exact path='/' component={Overview} />\n  </BrowserRouter>\n)\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport 'fontsource-roboto'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}